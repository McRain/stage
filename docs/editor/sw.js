const CACHE_NAME="CACHE_VERSION_1",FILE_EXTENSIONS_TO_CACHE=[".png",".jpg",".jpeg",".gif",".woff",".woff2",".ttf",".ico",".hdr",".bin",".glb",".gltf"],CACHE_FILES=["/editor/index.html"];self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE_NAME).then(e=>e.addAll(CACHE_FILES)))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return caches.delete(e)}))))}),self.addEventListener("fetch",e=>{const t=new URL(e.request.url);if(t.protocol.startsWith("http"))return FILE_EXTENSIONS_TO_CACHE.some(e=>t.pathname.endsWith(e))?void e.respondWith(caches.match(e.request).then(t=>t||fetch(e.request).then(t=>{const n=t.clone();return caches.open(CACHE_NAME).then(t=>{t.put(e.request,n)}),t}).catch(e=>{throw console.error("Fetch failed:",e),e}))):fetch(e.request)});
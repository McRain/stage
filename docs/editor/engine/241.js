"use strict";(self.webpackChunk_reneos_3d_editor_engine=self.webpackChunk_reneos_3d_editor_engine||[]).push([[241],{183:(e,t,i)=>{i.d(t,{A:()=>o});var s=i(909);class r extends s.Object3D{static get IsElement(){return!0}constructor(e){super(),this.type="element",this.isElement=!0,this.isBase=!0,this.uid=e.uid,this.data={...e},this.path="",this.paths=[],this.state=null,this.actions=[]}getTypes(){return[...super.getTypes(),"element"]}exportData(e){const{model:t,children:i,...s}=this.data||e,r=JSON.parse(JSON.stringify(s));if(this.data.rotation&&(r.rotation={x:this.data.rotation.x,y:this.data.rotation.y,z:this.data.rotation.z}),i){r.children=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.children.find(e=>e.uid===t.uid);r.children[e]=s.exportData?s.exportData():JSON.parse(JSON.stringify(s.data||{}))}}return r}addAction(e){this.actions.push(e)}removeAction(e,t){const i=this.data.actions.findIndex(i=>i.uid===e&&i.hook===t);i>=0&&this.data.actions.splice(i,1)}get model(){return this}find(e){const t=e.split(".");let i=this;for(let e=0;e<t.length;e++)i=this.children.find(i=>i.uid===t[e]),list=i.children;return i}}const o=r},241:(e,t,i)=>{i.r(t),i.d(t,{default:()=>a});var s=i(909),r=i(183);class o extends r.A{constructor(e){super(e),this.type="videoplane",this.isVideoMesh=!0,this.properties=e.properties||{url:"#"},this.video=document.createElement("video"),this.video.crossOrigin="anonymous",this.video.loop=!0,this.video.muted=!0,this.video.playsInline=!0,this.video.addEventListener("canplay",()=>{this.video.play().catch(e=>console.error("Autoplay failed:",e))}),this.video.addEventListener("error",e=>{console.error("Video error:",e),console.error("Error details:",this.video.error)}),console.log(this.properties.url),this.video.src=this.properties.url||"https://s3.eu-west-1.amazonaws.com/3dbuilder.reneos.com/video/sintel.mp4",this.videoTexture=new s.VideoTexture(this.video),this.videoTexture.minFilter=s.LinearFilter,this.videoTexture.magFilter=s.LinearFilter,this.videoTexture.format=s.RGBFormat,this.geometry=new s.PlaneGeometry(1,1,10,10),this.material=new s.MeshBasicMaterial({map:this.videoTexture,side:s.DoubleSide}),this._mesh=new s.Mesh(this.geometry,this.material),this.add(this._mesh)}getTypes(){return[...super.getTypes(),"videoplane"]}get url(){return this.properties.url}set url(e){this.properties.url=e,this.video.src=e,this.play()}play(){this.video.readyState>=2?this.video.play().catch(e=>console.error("Play failed:",e)):this.video.addEventListener("canplay",()=>{this.video.play().catch(e=>console.error("Play failed:",e))})}stop(){this.video.pause()}}const a=o}}]);
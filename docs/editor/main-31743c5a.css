.panel-container{display:block}.panel-container .panel{position:absolute;top:0;left:0;right:0;bottom:0;max-height:100%;display:grid;grid-template-rows:min-content 1fr min-content;gap:3px;padding:1px}.panel-container .panel .header{pointer-events:all;user-select:none;display:flex;justify-content:center;align-items:center;gap:10px;padding:5px}.panel-container .panel .header h3{flex:1;text-align:center}.panel-container .panel .content{padding:10px;pointer-events:all;display:flex;flex-direction:column;overflow-y:auto}.panel-container .panel .footer{pointer-events:all;user-select:none;cursor:pointer;display:flex;justify-content:center;gap:10px;align-items:center;padding:3px;position:relative}

.slide-scroller {
&[data-v-c5bb29ca] {
    overflow-x: hidden;
    overflow-y: hidden;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch;
    pointer-events: none;
}
.slide-container {
&[data-v-c5bb29ca] {
        display: inline-block;
        transition: transform 0.3s ease;
        pointer-events: all;
}
.slide-item {
&[data-v-c5bb29ca] {
            /*width: 70px;*/
            height: 70px;
            display: inline-block;
            margin: 0;
            cursor: pointer;
            text-align: center;
            position: relative;
}
.title[data-v-c5bb29ca] {
                display: flex;
                justify-content: center;
                align-items: center;
                height: 16px;
}
&.selected {
img[data-v-c5bb29ca] {
                    border-color: #50a5ffa9;
}
}
img[data-v-c5bb29ca] {
                width: auto;
                /*height: 48px;*/
                height: 100%;
                border: 2px solid transparent;
                transition: border-color 0.2s ease;
}
.overflow[data-v-c5bb29ca] {
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
                right: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                /*margin-bottom: 20px;*/
}
}
}
}


.panel-container {
&[data-v-e71891a0] {
    padding: 0px;
}
.panel {
&[data-v-e71891a0] {
        position: absolute;
        top: 1px;
        left: 1px;
        right: 1px;
        max-height: 100%;
        display: grid;
        grid-template-rows: 32px 1fr;
        background-color: rgba(43, 43, 43, 0.75);
        border: 1px solid rgb(0, 0, 0);
        border-radius: 10px;
        gap: 5px;
}
.header[data-v-e71891a0] {
            pointer-events: all;
            height: 32px;
            user-select: none;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
}
.content {
&[data-v-e71891a0] {
            flex: 1;
            pointer-events: all;
            display: flex;
            flex-direction: column;    
            overflow: auto;
            margin: 5px;
}
.elements[data-v-e71891a0]{
                /*min-height: 1280px;*/
                overflow-y: auto;
}
}
}
}


.inspector {
    user-select: none;
    pointer-events: all;
    position: absolute;
    top: 48px;
    left: 4px;
    bottom: 10px;
    width: 280px;
    padding: 1px;
}

.focusedtree[data-v-a8cc45f6]{color:var(--text-focused);background-color:var(--bg-focused)}.hierarhy-view[data-v-a8cc45f6]{overflow-y:auto;overflow-x:hidden;width:100%}.hierarhy-view .title[data-v-a8cc45f6]{display:flex;gap:5px}.treeicon[data-v-a8cc45f6]{display:flex;gap:3px;flex-wrap:nowrap;cursor:pointer}.label[data-v-a8cc45f6]{cursor:pointer}
.hierarhy-view[data-v-3eac9d53]{overflow-y:auto;overflow-x:hidden;display:flex;flex-direction:column}.focusedtree[data-v-3eac9d53]{color:var(--text-focused);background-color:var(--bg-focused)}.treeicon[data-v-3eac9d53]{display:flex;gap:3px}.treeicon .svgicon[data-v-3eac9d53]{cursor:pointer}.label[data-v-3eac9d53]{cursor:pointer}
.hierarhy-view[data-v-6bf93691]{overflow-y:auto;overflow-x:hidden}.focusedtree[data-v-6bf93691]{color:var(--text-focused);background-color:var(--bg-focused)}.label[data-v-6bf93691]{cursor:pointer}

.transformer{
    display: flex;
    position: absolute;
    justify-content: center;
    top: 2px;
    left: 256px;
    right: 256px;
.icons{
        display: flex;
        gap: 15px;
        pointer-events: all;
        border-radius: 10px;
        background-color: rgba(0,0,0,0.5);
        padding: 5px;
.svgicon{
            cursor: pointer;
}
}
}


.horizontal-menu[data-v-202d206c] {
    pointer-events: all;
    background: #2c3e50;
    display: flex;
    justify-content: flex-start;
    padding: 0;
    margin: 0;
    list-style: none;
    position: relative;
    width: 100%;
    border-radius: 4px;
}

/* Основные пункты меню */
.horizontal-menu>li[data-v-202d206c] {
    position: relative;
}
.horizontal-menu>li>a[data-v-202d206c] {
    display: flex;
    align-items: center;
    color: white;
    text-decoration: none;
    padding: 10px 5px;
    transition: all 0.3s ease;
}
.horizontal-menu>li>a[data-v-202d206c]:hover {
    background: #34495e;
}

/* Иконки и текст */
.menu-icon[data-v-202d206c] {
    margin-right: 8px;
    font-size: 16px;
    width: 20px;
    text-align: center;
}
.menu-text[data-v-202d206c] {
    white-space: nowrap;
    padding-left: 5px;
}

/* Стрелка для подменю */
.menu-arrow[data-v-202d206c] {
    margin-left: 1px;
    font-size: 12px;
    transition: transform 0.3s;
}

/* Выпадающие подменю */
.submenu[data-v-202d206c] {
    position: absolute;
    top: 100%;
    left: 0;
    padding: 0;
    background: #34495e;
    list-style: none;
    display: none;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
    z-index: 100;
    border-radius: 0 0 4px 4px;
}
.submenu li a[data-v-202d206c] {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 8px 8px;
    color: white;
    text-decoration: none;
    transition: all 0.2s;
}
.submenu li a[data-v-202d206c]:hover {
    background: #3d566e;
    /*padding-left: 15px;*/
}

/* Показываем подменю при наведении */
.horizontal-menu>li:hover>.submenu[data-v-202d206c] {
    display: block;
}
.horizontal-menu>li:hover>a .menu-arrow[data-v-202d206c] {
    transform: rotate(180deg);
}

/* Подменю второго уровня */
.submenu .submenu[data-v-202d206c] {
    left: 100%;
    top: 0;
    border-radius: 0 4px 4px 4px;
}
.submenu li[data-v-202d206c] {
    position: relative;
}
.submenu li:hover>.submenu[data-v-202d206c] {
    display: block;
}


.dropdown[data-v-4594b897] {
    pointer-events: all;
    position: relative;
    display: inline-block;
    font-size: 1.2em;
}
.dropdown-trigger[data-v-4594b897] {
    padding: 10px 16px;
    border-radius: 4px;
    cursor: pointer;
    user-select: none;
}
.dropdown-menu[data-v-4594b897] {
    position: absolute;
    top: 50%;
    left: -30px;
    min-width: 160px;
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    margin-top: 15px;
    z-index: 1000;
    background-color: var(--panelbgcolor);
}
.dropdown-item[data-v-4594b897] {
    display: block;
    padding: 8px 16px;
    cursor: pointer;
    text-decoration: none;
}
.dropdown-item[data-v-4594b897]:hover {}
.fade-enter-active[data-v-4594b897],
.fade-leave-active[data-v-4594b897] {
    transition: all 0.3s ease;
}
.fade-enter-from[data-v-4594b897],
.fade-leave-to[data-v-4594b897] {
    /*opacity: 0;*/
    transform: translateY(-10px);
}

.editor-container{
	position: relative;
	width: 100%;
	height: 100%;
	overflow: hidden;
	.tools{
		position: absolute;
		top:0;
		width: 100%;
	}
	.workspace{
		width: 100%;
		height: 100%;
	}
}

.element[data-v-3c08750e] {
    height: 100%;
    /* или фиксированную высоту, например 200px */
    min-height: 0;
    /* важно для правильной работы overflow в grid/flex */
    max-height: 100%;

    padding: 1px;
    overflow-y: auto;
    display: flexbox;
    flex-direction: column;
}
.elementContent[data-v-3c08750e] {
    height: 100%;
    /* или фиксированную высоту, например 200px */
    min-height: 0;
    /* важно для правильной работы overflow в grid/flex */
    max-height: 100%;
    position: relative;
}
.container {
&[data-v-3c08750e]{
    position: absolute;
    height: 100vh;
    width: 100%;
    left: 0;
    top: 0;
    pointer-events: none;
    }
.topline {
&[data-v-3c08750e]{
        display: grid;
        background: #2c3e50;
        grid-template-columns: 30% 40% 30%;
        }
.title[data-v-3c08750e] {
            display: flex;
            justify-content: center;
            align-items: center;
}
.info {
&[data-v-3c08750e]{
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            align-items: center;
            padding: 0 10px;
            }
.icon[data-v-3c08750e] {
                cursor: pointer;
                pointer-events: all;
}
}
}
.hierarhy[data-v-3c08750e] {
        position: absolute;
        bottom: 0;
        right: 0;
        top: 20%;
        width: 256px;
        height: 100%;
}
.project[data-v-3c08750e] {
        position: absolute;
        top: 48px;
        right: 3px;
        bottom: 10px;
        width: 256px;
        pointer-events: all;
        /*display: grid;
        grid-template-rows: repeat(auto-fill, 1fr);*/
}
.sliders[data-v-3c08750e] {
        position: absolute;
        bottom: 0px;
        left: 266px;
        right: 266px;
        /*height: 72px;*/
}
}

/* Боковая панель */
.sidebar[data-v-3c08750e] {
    width: 68px;
    background-color: rgba(29, 32, 62, 0.5);
    padding-left: 11px;
    overflow: hidden;
    pointer-events: all;
}
.sidebar .menu[data-v-3c08750e] {
    position: absolute;
    top: 0;
    left: 0;
    list-style: none;
    padding-top: 120px;
    padding-left: 20px;
    height: 884px;
    width: 67px;
    /*background-image: url('/assets/bar.png');
    background-repeat: no-repeat;*/
    display: flex;
    flex-direction: column;
    gap: 50px;
}
.sidebar .menublur[data-v-3c08750e] {
    position: absolute;
    top: 0;
    left: 0;
    padding-top: 120px;
    padding-left: 20px;
    height: 884px;
    width: 67px;
    filter: blur(5px);
}
.sidebar .menu .menuelement[data-v-3c08750e] {
    width: 40px;
    height: 40px;
    background-image: url(/editor/assets/5bf54e94011af41adb2c.png);
}
.sidebar .menu .menuelements[data-v-3c08750e] {
    width: 60px;
    height: 60px;
    background-image: url(/editor/assets/5bf54e94011af41adb2c.png);
    background-size: cover;
    background-repeat: no-repeat;
}
.sidebar .menu .menuelement[data-v-3c08750e]:hover {
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
    border-radius: 50%;
}
.slides[data-v-3c08750e] {
    position: absolute;
    bottom: 10px;
    left: 150px;
    right: 150px;
    pointer-events: all;
}
.main-content {
&[data-v-3c08750e]{
    position: relative;
    }
.camlist[data-v-3c08750e] {
        position: absolute;
        top: 0;
        right: 0;
        pointer-events: all;
}
}



/* Контейнер для карточек */
.card-container[data-v-3c08750e] {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    /* Адаптивные столбцы */
    gap: 20px;
}

/* Карточки */
.card[data-v-3c08750e] {
    background-color: #222;
    border-radius: 10px;
    padding: 20px;
}
.card-large[data-v-3c08750e] {
    grid-column: span 2;
    /* Занимает 2 столбца */
}

/* Правая панель */
.right-sidebar {
&[data-v-3c08750e]{
    width: 200px;
    background-color: #2C2F48;
    overflow-y: auto;
    }
.right-slider {
&[data-v-3c08750e]{
        pointer-events: all;
        display: flex;
        flex-direction: column;
        gap: 5px;
        width: 100%;
        padding: 5px;
        }
.side-card[data-v-3c08750e] {
            background-color: rgba(255, 255, 255, 0.3);
            min-height: 10px;
            border-radius: 5%;
            border: 1px solid #0e0f16;
            filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));
}
.line[data-v-3c08750e] {
            border: 1px solid #202235;
}
}
}

.simple[data-v-673fd16a]{height:100%;aspect-ratio:1/1;display:flex;justify-content:center;align-items:center}.simple:active .btnicon[data-v-673fd16a]{transform:translateY(2px);transform:translateX(2px)}.simple .btnicon[data-v-673fd16a]{height:100%;display:flex;justify-content:center;align-items:center}.simple.active[data-v-673fd16a]{background-color:#007bff;color:#fff}

.toast-container[data-v-3aed840a] {
    position: fixed;
    top: 10px;
    right: 10px;
    left: 10px;
    z-index: 9999;
    display: flex;
    justify-content: center;
    pointer-events: none;
    user-select: none;
}
.toast {
&[data-v-3aed840a] {
    background-color: var(--popupbgcolor);
    padding: 10px;
    min-width: 256px;
    min-height: 64px;
    border-radius: 5px;
    margin-bottom: 10px;
    display: flex;
    align-items: center;
    box-shadow: 3px 3px 3px 0 rgba(12, 12, 12, 0.836);
    pointer-events: all;
    }
.toastview[data-v-3aed840a]{
        font-size: 1.2em;
        max-width: 300px;
}
}
.toast-enter-active[data-v-3aed840a],
.toast-leave-active[data-v-3aed840a] {
    transition: opacity 0.5s;
}
.toast-enter-from[data-v-3aed840a],
.toast-leave-to[data-v-3aed840a] {
    opacity: 0;
}


.alert {
    display: flex;
    flex-direction: row;
.alerticon {
        margin: 10px;
        fill: rgb(255, 2, 2);
}
.infoicon {
        margin: 10px;
        fill: rgb(98, 174, 236);
}
.warningicon {
        margin: 10px;
        fill: rgb(194, 191, 55);
}
.text {
        font-size: 1.1em;
        display: flex;
        width: 100%;
        align-items: center;
        margin-left: 10px;
}
}


.cardroot[data-v-a3d9ff12] {
    position: absolute;
    height: 256px;
    width: 256px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2em;
    cursor: pointer;
    text-align: center;
}


.toastcontainer {
    display: flex;
    flex-direction: column;
    width: 100%;
.alert {
        display: flex;
        flex-direction: row;
.alerticon {
            margin: 10px;
            fill: rgb(255, 0, 0);
}
.infoicon {
            margin: 10px;
            fill: rgb(98, 174, 236);
}
.warningicon {
            margin: 10px;
            fill: rgb(194, 191, 55);
}
.text {
            font-size: 1.1em;
            display: flex;
            width: 100%;
            align-items: center;
}
}
.buttons {
        display: flex;
        flex-direction: row;
        justify-content: center;
        gap: 15px;
button {
            width: 100%;
}
}
}

html{--text-color-normal: hsl(0, 0%, 13%);--text-color-inver: #b43b3b;--bgcolor: rgb(226, 226, 226);--bordercolor: rgba(29, 21, 23, 1);--button-info-bg: rgb(158, 156, 156);--symbolColor: rgb(99, 145, 99)}html[data-theme=dark]{--btnw: 64px;--text-color-normal: #c5c9cf;--text-color-inver: #610404;--text-color-a: #abdfa7;--text-focused: #eeee80e3;--bg-focused: rgba(0, 0, 0, 0.25);--bgcolor: rgb(35, 31, 32);--symbolColor: rgb(142, 197, 142);--symbolColorAlpha: rgba(142, 197, 142, 0.5);--panelbgcolor: rgba(41, 32, 35, 0.95);--panelbgcolora: rgba(51, 51, 51, 0.3);--popupbgcolor: rgba(51, 51, 51, 0.863);--popupshadowcolor: rgba(32, 32, 32, 0.877);--tooltip-bgcolor: rgba(0, 0, 0, .9);--bordercolor: rgba(29, 21, 23, 0.95);--button-info-bg: rgb(66, 65, 65);--button-info-active-bg: rgb(97, 94, 94);--button-info-passive-bg: rgba(87, 87, 87, 0.5);--button-info-border: rgba(5, 4, 4, 0.548);--button-icon-fill: rgba(197, 194, 194, 0.925);--button-warn-bg: rgb(128, 0, 0);--button-warn-active-bg: rgb(150, 26, 26);--button-warn-passive-bg: rgb(95, 43, 43);--button-warn-border: rgba(5, 4, 4, 0.548)}.floatInput{max-width:54px}.floatInputinput::-webkit-outer-spin-button,.floatInput input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}.floatInputinput[type=number]{-moz-appearance:textfield}.collapsible-panel{width:100%;border-radius:4px;overflow:hidden;margin-bottom:4px;border:1px solid #000}.collapsible-panel .panel-header{display:flex;justify-content:space-between;align-items:center;padding:5px;cursor:pointer;user-select:none;gap:5px}.collapsible-panel .panel-header .header-content{display:flex;align-items:center;gap:8px;flex-grow:1;justify-content:space-between;min-width:0}.collapsible-panel .panel-header .header-content .label{font-weight:500;flex:1;white-space:nowrap}.collapsible-panel .panel-header .toggle-icon{transition:transform .2s ease;transform:rotate(-90deg);width:17px}.collapsible-panel .panel-header .toggle-icon.open{transform:rotate(0deg)}.collapsible-panel .panel-content{padding:5px;width:100%;box-sizing:border-box}.buttons-group{display:flex}.btn{padding:10px 15px}button{display:flex;justify-content:center;align-items:center;padding:2px 3px;color:var(--text-color-normal);cursor:pointer;border-radius:5px;font-size:.75em;background-color:var(--button-info-bg);fill:var(--button-icon-fill);box-shadow:2px 2px 2px 1px rgba(0,0,0,.2);border:none}button svg{margin:3px}button:disabled{opacity:.6;cursor:not-allowed;color:#272727}button.primary{background-color:#009130;padding:10px 15px}button.primary :disabled{background-color:rgba(0,145,48,.5607843137)}button.secondary{background-color:#007286;padding:10px 15px}button.secondary :disabled{background-color:rgba(0,121,143,.4431372549)}button.additional{background-color:#910825;padding:10px 15px}button.additional :disabled{background-color:rgba(143,0,79,.4431372549)}button.small-btn{min-height:18px;font-size:.75em}button.normal{min-width:100px}button.info{background-color:var(--button-info-bg)}button.cancel{background-color:var(--button-info-warn)}button.large{min-height:3em}button.active{background-color:var(--button-info-active-bg)}button.passive{background-color:var(--button-info-passive-bg);opacity:.75}button.square{aspect-ratio:1/1}button .label{justify-content:center;align-items:center;display:flex;height:100%}.panel{background:var(--panelbgcolor);border-radius:4px;border:1px solid #131212;box-shadow:2px 2px 5px rgba(0,0,0,.404)}.selectable-container{margin:auto;height:256px;display:flex;flex-direction:row}.selectable-container .info{height:100%;padding:10px;display:flex;flex-direction:column;gap:5px;overflow-y:auto}.selectable-container .info .row{display:grid;grid-template-columns:64px 128px}.selectable-container .info .row .rowvalue{width:100%}.selectable-container .list{flex:1;height:100%;width:512px;overflow-y:auto}.selectable-container .list .grid{width:100%;display:grid;grid-template-columns:repeat(auto-fill, 96px);grid-auto-rows:87px;gap:5px}.selectable-container .list .grid .grid-element{cursor:pointer;width:80px;height:80px;border-radius:10px;border:1px solid rgba(0,0,0,.75);padding:5px;overflow:hidden;display:flex;flex-direction:column;gap:5px}.vlist-container{margin:auto;height:256px;min-width:256px}.vlist-container .list{height:100%;width:100%;overflow-y:auto}.vlist-container .list .vlist{width:100%;display:flex;flex-direction:column;gap:5px}.vlist-container .list .vlist .vlist-element{cursor:pointer;border-radius:3px;border:1px solid rgba(0,0,0,.75);padding:5px;overflow:hidden;display:flex;gap:5px}*{scrollbar-width:thin;scrollbar-color:var(--bordercolor) var(--button-info-bg)}*::-webkit-scrollbar{width:12px}*::-webkit-scrollbar-track{background:#424242}*::-webkit-scrollbar-thumb{background-color:#232324;border-radius:20px;border:3px solid #000}html,body{margin:0;padding:0;width:100%;height:100%;overflow:hidden;background-color:var(--bgcolor);color:var(--text-color-normal);font-size:14px}html a,body a{color:var(--text-color-a)}html video,body video{mix-blend-mode:overlay;filter:grayscale(1)}html #app,body #app{width:100%;height:100%}html #app .app-container,body #app .app-container{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;justify-content:center;align-items:center}html #app .app-container .workspace,body #app .app-container .workspace{top:0;left:0;right:0;bottom:0;position:absolute}html .app .version,body .app .version{position:absolute;bottom:0;left:0}.w100{width:100%}.tcenter{text-align:center}.center{display:flex;justify-content:center}.textwrap{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;display:block}.tooltip{transition:visibility .5s,opacity .5s;opacity:0;color:var(--text-color-normal);background-color:var(--tooltip-bgcolor);padding:5px 10px;border-radius:5px;white-space:nowrap;z-index:1000;pointer-events:none}.tooltip[style*="visibility: visible"]{opacity:1}.canvas-main{margin:0;padding:0;width:100%;height:100%;position:absolute}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/